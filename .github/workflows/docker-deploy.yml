name: Docker Build and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/json_share:latest
          
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 创建项目目录（如果不存在）
            mkdir -p ~/json_share
            cd ~/json_share
            
            # 创建环境变量文件
            echo "${{ secrets.ENV_FILE }}" > .env
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
            
            # 下载最新的docker-compose文件
            curl -o docker-compose.prod.yml https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.prod.yml
            
            # 确保mysql-init目录存在并下载初始化脚本
            mkdir -p mysql-init
            curl -o mysql-init/init.sql https://raw.githubusercontent.com/${{ github.repository }}/main/mysql-init/init.sql
            
            # 拉取最新的Docker镜像
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/json_share:latest

            
            # 重启服务
            sudo docker-compose -f docker-compose.prod.yml down
            sudo docker-compose -f docker-compose.prod.yml up -d 